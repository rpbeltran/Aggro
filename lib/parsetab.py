
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALSCMP_LTCMP_GTleftANDORleftPLUSMINUSleftTIMESDIVIDErightPOWERnonassocNOTA AND BY CMP_GT CMP_LT DIVIDE DIVIDES DOES ELSE EQUALS EVENLY FALSE IF IMPLIES MINUS MOD NOT NUMERIC_CONSTANT ONLY OR OTHERWISE PLUS POWER SENTENCE_END THAN THE THEN TIMES TO TRUE UNWORDprogram : sentence\n               | sentence program\n    sentence : proposition SENTENCE_ENDsentence : EQUALS proposition SENTENCE_END \n                | DOES   proposition SENTENCE_END\n                | EQUALS numeric_expression numeric_expression SENTENCE_END\n    sentence : EQUALS identifier SENTENCE_END\n                | DOES   identifier SENTENCE_END\n    sentence : proposition IF proposition SENTENCE_ENDsentence : proposition IF AND ONLY IF proposition SENTENCE_ENDsentence : proposition ONLY IF proposition SENTENCE_ENDsentence : proposition IMPLIES proposition SENTENCE_ENDsentence : IF proposition THEN proposition SENTENCE_ENDsentence : IF AND ONLY IF proposition THEN proposition SENTENCE_ENDsentence : ONLY IF proposition THEN proposition SENTENCE_ENDproposition : proposition AND proposition\n                   | NOT proposition\n    proposition : proposition OR proposition\n    proposition : numeric_expression DIVIDES numeric_expression \n                   | numeric_expression DIVIDES numeric_expression EVENLY\n     proposition : numeric_expression NOT DIVIDE numeric_expression\n                    | numeric_expression NOT DIVIDE numeric_expression EVENLY\n     proposition : numeric_expression DOES NOT DIVIDE numeric_expression\n                    | numeric_expression DOES NOT DIVIDE numeric_expression EVENLY\n    proposition : numeric_expression EQUALS EQUALS numeric_expression\n                   | numeric_expression EQUALS numeric_expression\n                   | TRUE\n    proposition : numeric_expression inequality numeric_expression\n                   | FALSE\n    inequality : inequality OR EQUALS\n                  | inequality OR EQUALS TOinequality : EQUALS inequality\n    inequality : CMP_LT\n                  | CMP_GT\n                  | THAN\n                  | CMP_LT THAN\n                  | CMP_GT THANnumeric_expression : numeric_expression PLUS numeric_expression numeric_expression : numeric_expression MINUS numeric_expression numeric_expression : numeric_expression TIMES    numeric_expression\n                          | numeric_expression TIMES BY numeric_expression\n    numeric_expression : numeric_expression DIVIDE    numeric_expression\n                          | numeric_expression DIVIDE BY numeric_expression\n    numeric_expression : numeric_expression POWER numeric_expression numeric_expression : numeric_expression MOD numeric_expression numeric_expression : identifier\n                          | numeric_const\n    numeric_const : NUMERIC_CONSTANTidentifier :   identifier_content\n                  | A identifier_content\n    identifier : THE identifier_contentidentifier_content : UNWORD\n                          | identifier_content UNWORD\n    '
    
_lr_action_items = {'THEN':([4,7,10,11,14,15,18,42,46,47,49,51,52,55,60,62,63,66,69,70,71,73,75,83,88,89,91,93,95,102,103,106,109,],[-27,-47,-48,-52,-29,-49,-46,-50,-51,81,-53,-17,-16,-18,-42,-44,-26,-39,-38,-45,-40,-28,-19,99,-43,-25,-21,-41,-20,-22,-23,110,-24,]),'CMP_LT':([3,7,10,11,15,18,30,41,42,44,45,46,49,60,62,64,66,69,70,71,88,90,93,],[27,-47,-48,-52,-49,-46,27,-46,-50,27,-46,-51,-53,-42,-44,27,-39,-38,-45,-40,-43,27,-41,]),'TRUE':([0,1,5,9,13,17,20,21,22,24,25,50,54,76,77,78,80,81,84,86,96,98,99,100,101,105,110,111,112,114,],[4,4,4,4,4,4,4,4,-3,4,4,4,4,-5,-8,-4,-7,4,-12,-9,-6,4,4,-11,4,-13,4,-15,-10,-14,]),'MINUS':([3,7,10,11,15,18,41,42,44,45,46,49,60,62,63,66,69,70,71,73,75,79,88,89,91,93,103,],[32,-47,-48,-52,-49,-46,-46,-50,32,-46,-51,-53,-42,-44,32,-39,-38,32,-40,32,32,32,32,32,32,32,32,]),'CMP_GT':([3,7,10,11,15,18,30,41,42,44,45,46,49,60,62,64,66,69,70,71,88,90,93,],[26,-47,-48,-52,-49,-46,26,-46,-50,26,-46,-51,-53,-42,-44,26,-39,-38,-45,-40,-43,26,-41,]),'POWER':([3,7,10,11,15,18,41,42,44,45,46,49,60,62,63,66,69,70,71,73,75,79,88,89,91,93,103,],[29,-47,-48,-52,-49,-46,-46,-50,29,-46,-51,-53,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'SENTENCE_END':([2,4,7,10,11,14,15,18,40,41,42,43,45,46,49,51,52,53,55,56,60,62,63,66,69,70,71,73,75,79,85,88,89,91,93,95,97,102,103,107,108,109,113,],[22,-27,-47,-48,-52,-29,-49,-46,76,77,-50,78,80,-51,-53,-17,-16,84,-18,86,-42,-44,-26,-39,-38,-45,-40,-28,-19,96,100,-43,-25,-21,-41,-20,105,-22,-23,111,112,-24,114,]),'THAN':([3,7,10,11,15,18,26,27,30,41,42,44,45,46,49,60,62,64,66,69,70,71,88,90,93,],[31,-47,-48,-52,-49,-46,58,59,31,-46,-50,31,-46,-51,-53,-42,-44,31,-39,-38,-45,-40,-43,31,-41,]),'TO':([94,],[104,]),'PLUS':([3,7,10,11,15,18,41,42,44,45,46,49,60,62,63,66,69,70,71,73,75,79,88,89,91,93,103,],[35,-47,-48,-52,-49,-46,-46,-50,35,-46,-51,-53,-42,-44,35,-39,-38,35,-40,35,35,35,35,35,35,35,35,]),'NUMERIC_CONSTANT':([0,1,5,7,9,10,11,13,15,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,42,44,45,46,49,50,54,58,59,60,61,62,64,65,66,67,69,70,71,72,76,77,78,80,81,84,86,88,92,93,94,96,98,99,100,101,104,105,110,111,112,114,],[10,10,10,-47,10,-48,-52,10,-49,10,-46,10,10,-3,10,10,-34,-33,10,10,10,-35,10,10,10,10,10,10,-50,10,-46,-51,-53,10,10,-37,-36,-42,10,-44,10,-32,-39,10,-38,-45,-40,10,-5,-8,-4,-7,10,-12,-9,-43,10,-41,-30,-6,10,10,-11,10,-31,-13,10,-15,-10,-14,]),'$end':([1,6,19,22,76,77,78,80,84,86,96,100,105,111,112,114,],[-1,0,-2,-3,-5,-8,-4,-7,-12,-9,-6,-11,-13,-15,-10,-14,]),'A':([0,1,5,7,9,10,11,13,15,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,42,44,45,46,49,50,54,58,59,60,61,62,64,65,66,67,69,70,71,72,76,77,78,80,81,84,86,88,92,93,94,96,98,99,100,101,104,105,110,111,112,114,],[8,8,8,-47,8,-48,-52,8,-49,8,-46,8,8,-3,8,8,-34,-33,8,8,8,-35,8,8,8,8,8,8,-50,8,-46,-51,-53,8,8,-37,-36,-42,8,-44,8,-32,-39,8,-38,-45,-40,8,-5,-8,-4,-7,8,-12,-9,-43,8,-41,-30,-6,8,8,-11,8,-31,-13,8,-15,-10,-14,]),'IMPLIES':([2,4,7,10,11,14,15,18,42,46,49,51,52,55,60,62,63,66,69,70,71,73,75,88,89,91,93,95,102,103,109,],[21,-27,-47,-48,-52,-29,-49,-46,-50,-51,-53,-17,-16,-18,-42,-44,-26,-39,-38,-45,-40,-28,-19,-43,-25,-21,-41,-20,-22,-23,-24,]),'DIVIDE':([3,7,10,11,15,18,33,41,42,44,45,46,49,60,62,63,66,68,69,70,71,73,75,79,88,89,91,93,103,],[28,-47,-48,-52,-49,-46,67,-46,-50,28,-46,-51,-53,-42,-44,28,28,92,28,28,-40,28,28,28,28,28,28,28,28,]),'EQUALS':([0,1,3,7,10,11,15,18,22,30,41,42,44,45,46,49,60,62,64,66,69,70,71,74,76,77,78,80,84,86,88,90,93,96,100,105,111,112,114,],[9,9,30,-47,-48,-52,-49,-46,-3,64,-46,-50,30,-46,-51,-53,-42,-44,90,-39,-38,-45,-40,94,-5,-8,-4,-7,-12,-9,-43,90,-41,-6,-11,-13,-15,-10,-14,]),'TIMES':([3,7,10,11,15,18,41,42,44,45,46,49,60,62,63,66,69,70,71,73,75,79,88,89,91,93,103,],[37,-47,-48,-52,-49,-46,-46,-50,37,-46,-51,-53,-42,-44,37,37,37,37,-40,37,37,37,37,37,37,37,37,]),'UNWORD':([0,1,5,7,8,9,10,11,12,13,15,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,42,44,45,46,49,50,54,58,59,60,61,62,64,65,66,67,69,70,71,72,76,77,78,80,81,84,86,88,92,93,94,96,98,99,100,101,104,105,110,111,112,114,],[11,11,11,-47,11,11,-48,-52,11,11,49,11,-46,11,11,-3,11,11,-34,-33,11,11,11,-35,11,11,11,11,11,11,49,11,-46,49,-53,11,11,-37,-36,-42,11,-44,11,-32,-39,11,-38,-45,-40,11,-5,-8,-4,-7,11,-12,-9,-43,11,-41,-30,-6,11,11,-11,11,-31,-13,11,-15,-10,-14,]),'THE':([0,1,5,7,9,10,11,13,15,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,42,44,45,46,49,50,54,58,59,60,61,62,64,65,66,67,69,70,71,72,76,77,78,80,81,84,86,88,92,93,94,96,98,99,100,101,104,105,110,111,112,114,],[12,12,12,-47,12,-48,-52,12,-49,12,-46,12,12,-3,12,12,-34,-33,12,12,12,-35,12,12,12,12,12,12,-50,12,-46,-51,-53,12,12,-37,-36,-42,12,-44,12,-32,-39,12,-38,-45,-40,12,-5,-8,-4,-7,12,-12,-9,-43,12,-41,-30,-6,12,12,-11,12,-31,-13,12,-15,-10,-14,]),'BY':([28,37,],[61,72,]),'DIVIDES':([3,7,10,11,15,18,41,42,44,45,46,49,60,62,66,69,70,71,88,93,],[39,-47,-48,-52,-49,-46,-46,-50,39,-46,-51,-53,-42,-44,-39,-38,-45,-40,-43,-41,]),'IF':([0,1,2,4,7,10,11,14,15,16,18,22,23,42,46,49,51,52,55,60,62,63,66,69,70,71,73,75,76,77,78,80,82,84,86,87,88,89,91,93,95,96,100,102,103,105,109,111,112,114,],[13,13,25,-27,-47,-48,-52,-29,-49,50,-46,-3,54,-50,-51,-53,-17,-16,-18,-42,-44,-26,-39,-38,-45,-40,-28,-19,-5,-8,-4,-7,98,-12,-9,101,-43,-25,-21,-41,-20,-6,-11,-22,-23,-13,-24,-15,-10,-14,]),'AND':([2,4,7,10,11,13,14,15,18,25,40,42,43,46,47,49,51,52,53,55,56,60,62,63,66,69,70,71,73,75,83,85,88,89,91,93,95,97,102,103,106,107,108,109,113,],[20,-27,-47,-48,-52,48,-29,-49,-46,57,20,-50,20,-51,20,-53,-17,-16,20,-18,20,-42,-44,-26,-39,-38,-45,-40,-28,-19,20,20,-43,-25,-21,-41,-20,20,-22,-23,20,20,20,-24,20,]),'FALSE':([0,1,5,9,13,17,20,21,22,24,25,50,54,76,77,78,80,81,84,86,96,98,99,100,101,105,110,111,112,114,],[14,14,14,14,14,14,14,14,-3,14,14,14,14,-5,-8,-4,-7,14,-12,-9,-6,14,14,-11,14,-13,14,-15,-10,-14,]),'ONLY':([0,1,2,4,7,10,11,14,15,18,22,42,46,48,49,51,52,55,57,60,62,63,66,69,70,71,73,75,76,77,78,80,84,86,88,89,91,93,95,96,100,102,103,105,109,111,112,114,],[16,16,23,-27,-47,-48,-52,-29,-49,-46,-3,-50,-51,82,-53,-17,-16,-18,87,-42,-44,-26,-39,-38,-45,-40,-28,-19,-5,-8,-4,-7,-12,-9,-43,-25,-21,-41,-20,-6,-11,-22,-23,-13,-24,-15,-10,-14,]),'DOES':([0,1,3,7,10,11,15,18,22,41,42,44,45,46,49,60,62,66,69,70,71,76,77,78,80,84,86,88,93,96,100,105,111,112,114,],[5,5,34,-47,-48,-52,-49,-46,-3,-46,-50,34,-46,-51,-53,-42,-44,-39,-38,-45,-40,-5,-8,-4,-7,-12,-9,-43,-41,-6,-11,-13,-15,-10,-14,]),'NOT':([0,1,3,5,7,9,10,11,13,15,17,18,20,21,22,24,25,34,41,42,44,45,46,49,50,54,60,62,66,69,70,71,76,77,78,80,81,84,86,88,93,96,98,99,100,101,105,110,111,112,114,],[17,17,33,17,-47,17,-48,-52,17,-49,17,-46,17,17,-3,17,17,68,-46,-50,33,-46,-51,-53,17,17,-42,-44,-39,-38,-45,-40,-5,-8,-4,-7,17,-12,-9,-43,-41,-6,17,17,-11,17,-13,17,-15,-10,-14,]),'EVENLY':([7,10,11,15,18,42,46,49,60,62,66,69,70,71,75,88,91,93,103,],[-47,-48,-52,-49,-46,-50,-51,-53,-42,-44,-39,-38,-45,-40,95,-43,102,-41,109,]),'OR':([2,4,7,10,11,14,15,18,26,27,31,38,40,42,43,46,47,49,51,52,53,55,56,58,59,60,62,63,65,66,69,70,71,73,75,83,85,88,89,91,93,94,95,97,102,103,104,106,107,108,109,113,],[24,-27,-47,-48,-52,-29,-49,-46,-34,-33,-35,74,24,-50,24,-51,24,-53,-17,-16,24,-18,24,-37,-36,-42,-44,-26,74,-39,-38,-45,-40,-28,-19,24,24,-43,-25,-21,-41,-30,-20,24,-22,-23,-31,24,24,24,-24,24,]),'MOD':([3,7,10,11,15,18,41,42,44,45,46,49,60,62,63,66,69,70,71,73,75,79,88,89,91,93,103,],[36,-47,-48,-52,-49,-46,-46,-50,36,-46,-51,-53,-42,-44,36,-39,-38,36,-40,36,36,36,36,36,36,36,36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'proposition':([0,1,5,9,13,17,20,21,24,25,50,54,81,98,99,101,110,],[2,2,40,43,47,51,52,53,55,56,83,85,97,106,107,108,113,]),'sentence':([0,1,],[1,1,]),'identifier_content':([0,1,5,8,9,12,13,17,20,21,24,25,28,29,30,32,35,36,37,38,39,44,50,54,61,64,67,72,81,92,98,99,101,110,],[15,15,15,42,15,46,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'numeric_const':([0,1,5,9,13,17,20,21,24,25,28,29,30,32,35,36,37,38,39,44,50,54,61,64,67,72,81,92,98,99,101,110,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'program':([0,1,],[6,19,]),'numeric_expression':([0,1,5,9,13,17,20,21,24,25,28,29,30,32,35,36,37,38,39,44,50,54,61,64,67,72,81,92,98,99,101,110,],[3,3,3,44,3,3,3,3,3,3,60,62,63,66,69,70,71,73,75,79,3,3,88,89,91,93,3,103,3,3,3,3,]),'identifier':([0,1,5,9,13,17,20,21,24,25,28,29,30,32,35,36,37,38,39,44,50,54,61,64,67,72,81,92,98,99,101,110,],[18,18,41,45,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'inequality':([3,30,44,64,90,],[38,65,38,65,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence','program',1,'p_program','AST.py',185),
  ('program -> sentence program','program',2,'p_program','AST.py',186),
  ('sentence -> proposition SENTENCE_END','sentence',2,'p_given','AST.py',201),
  ('sentence -> EQUALS proposition SENTENCE_END','sentence',3,'p_query','AST.py',207),
  ('sentence -> DOES proposition SENTENCE_END','sentence',3,'p_query','AST.py',208),
  ('sentence -> EQUALS numeric_expression numeric_expression SENTENCE_END','sentence',4,'p_query','AST.py',209),
  ('sentence -> EQUALS identifier SENTENCE_END','sentence',3,'p_query2','AST.py',223),
  ('sentence -> DOES identifier SENTENCE_END','sentence',3,'p_query2','AST.py',224),
  ('sentence -> proposition IF proposition SENTENCE_END','sentence',4,'p_forward_utilization','AST.py',235),
  ('sentence -> proposition IF AND ONLY IF proposition SENTENCE_END','sentence',7,'p_forward_utilization2','AST.py',245),
  ('sentence -> proposition ONLY IF proposition SENTENCE_END','sentence',5,'p_forward_utilization3','AST.py',255),
  ('sentence -> proposition IMPLIES proposition SENTENCE_END','sentence',4,'p_back_utilization','AST.py',265),
  ('sentence -> IF proposition THEN proposition SENTENCE_END','sentence',5,'p_back_utilization2','AST.py',275),
  ('sentence -> IF AND ONLY IF proposition THEN proposition SENTENCE_END','sentence',8,'p_back_utilization3','AST.py',285),
  ('sentence -> ONLY IF proposition THEN proposition SENTENCE_END','sentence',6,'p_back_utilization4','AST.py',295),
  ('proposition -> proposition AND proposition','proposition',3,'p_high_poposition','AST.py',307),
  ('proposition -> NOT proposition','proposition',2,'p_high_poposition','AST.py',308),
  ('proposition -> proposition OR proposition','proposition',3,'p_high_poposition2','AST.py',320),
  ('proposition -> numeric_expression DIVIDES numeric_expression','proposition',3,'p_evenly','AST.py',328),
  ('proposition -> numeric_expression DIVIDES numeric_expression EVENLY','proposition',4,'p_evenly','AST.py',329),
  ('proposition -> numeric_expression NOT DIVIDE numeric_expression','proposition',4,'p_not_evenly','AST.py',338),
  ('proposition -> numeric_expression NOT DIVIDE numeric_expression EVENLY','proposition',5,'p_not_evenly','AST.py',339),
  ('proposition -> numeric_expression DOES NOT DIVIDE numeric_expression','proposition',5,'p_not_evenly2','AST.py',350),
  ('proposition -> numeric_expression DOES NOT DIVIDE numeric_expression EVENLY','proposition',6,'p_not_evenly2','AST.py',351),
  ('proposition -> numeric_expression EQUALS EQUALS numeric_expression','proposition',4,'p_proposition','AST.py',362),
  ('proposition -> numeric_expression EQUALS numeric_expression','proposition',3,'p_proposition','AST.py',363),
  ('proposition -> TRUE','proposition',1,'p_proposition','AST.py',364),
  ('proposition -> numeric_expression inequality numeric_expression','proposition',3,'p_proposition2','AST.py',381),
  ('proposition -> FALSE','proposition',1,'p_proposition2','AST.py',382),
  ('inequality -> inequality OR EQUALS','inequality',3,'p_improper_inequality','AST.py',392),
  ('inequality -> inequality OR EQUALS TO','inequality',4,'p_improper_inequality','AST.py',393),
  ('inequality -> EQUALS inequality','inequality',2,'p_inequality_cut_is','AST.py',398),
  ('inequality -> CMP_LT','inequality',1,'p_inequality','AST.py',405),
  ('inequality -> CMP_GT','inequality',1,'p_inequality','AST.py',406),
  ('inequality -> THAN','inequality',1,'p_inequality','AST.py',407),
  ('inequality -> CMP_LT THAN','inequality',2,'p_inequality','AST.py',408),
  ('inequality -> CMP_GT THAN','inequality',2,'p_inequality','AST.py',409),
  ('numeric_expression -> numeric_expression PLUS numeric_expression','numeric_expression',3,'p_numeric_expression_addition','AST.py',414),
  ('numeric_expression -> numeric_expression MINUS numeric_expression','numeric_expression',3,'p_numeric_expression_subtraction','AST.py',419),
  ('numeric_expression -> numeric_expression TIMES numeric_expression','numeric_expression',3,'p_numeric_expression_multiplication','AST.py',424),
  ('numeric_expression -> numeric_expression TIMES BY numeric_expression','numeric_expression',4,'p_numeric_expression_multiplication','AST.py',425),
  ('numeric_expression -> numeric_expression DIVIDE numeric_expression','numeric_expression',3,'p_numeric_expression_division','AST.py',433),
  ('numeric_expression -> numeric_expression DIVIDE BY numeric_expression','numeric_expression',4,'p_numeric_expression_division','AST.py',434),
  ('numeric_expression -> numeric_expression POWER numeric_expression','numeric_expression',3,'p_numeric_expression_exponentiation','AST.py',442),
  ('numeric_expression -> numeric_expression MOD numeric_expression','numeric_expression',3,'p_numeric_expression_modulo','AST.py',447),
  ('numeric_expression -> identifier','numeric_expression',1,'p_numeric_expression_term','AST.py',453),
  ('numeric_expression -> numeric_const','numeric_expression',1,'p_numeric_expression_term','AST.py',454),
  ('numeric_const -> NUMERIC_CONSTANT','numeric_const',1,'p_numeric_const','AST.py',460),
  ('identifier -> identifier_content','identifier',1,'p_identifier','AST.py',465),
  ('identifier -> A identifier_content','identifier',2,'p_identifier','AST.py',466),
  ('identifier -> THE identifier_content','identifier',2,'p_identifier2','AST.py',479),
  ('identifier_content -> UNWORD','identifier_content',1,'p_identifier_content','AST.py',486),
  ('identifier_content -> identifier_content UNWORD','identifier_content',2,'p_identifier_content','AST.py',487),
]
